{
    "openapi": "3.1.0",
    "info": {
        "title": "rest",
        "description": "",
        "license": {
            "name": ""
        },
        "version": "1.1.1-dev"
    },
    "servers": [
        {
            "url": "http://localhost:3000/",
            "description": "Shifty backend"
        }
    ],
    "paths": {
        "/billing-period": {
            "get": {
                "tags": [
                    "billing_period"
                ],
                "operationId": "get_all_billing_periods",
                "responses": {
                    "200": {
                        "description": "List all billing periods",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BillingPeriodTO"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearer_auth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "billing_period"
                ],
                "operationId": "create_billing_period",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateBillingPeriodRequestTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Create new billing period",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillingPeriodTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - HR permission required"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearer_auth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "billing_period"
                ],
                "operationId": "clear_all_billing_periods",
                "responses": {
                    "204": {
                        "description": "All billing periods cleared successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - HR permission required"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearer_auth": []
                    }
                ]
            }
        },
        "/billing-period/{id}": {
            "get": {
                "tags": [
                    "billing_period"
                ],
                "operationId": "get_billing_period",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Billing period ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get billing period by ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillingPeriodTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Billing period not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearer_auth": []
                    }
                ]
            }
        },
        "/billing-period/{id}/custom-report/{template_id}": {
            "post": {
                "tags": [
                    "billing_period"
                ],
                "operationId": "generate_custom_report",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Billing period ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "template_id",
                        "in": "path",
                        "description": "Text template ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Custom report generated successfully",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - HR permission required"
                    },
                    "404": {
                        "description": "Billing period or template not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearer_auth": []
                    }
                ]
            }
        },
        "/block-report/{template_id}": {
            "post": {
                "tags": [
                    "block_report"
                ],
                "operationId": "generate_block_report",
                "parameters": [
                    {
                        "name": "template_id",
                        "in": "path",
                        "description": "Text template ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Block report generated successfully",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - HR permission required"
                    },
                    "404": {
                        "description": "Template not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearer_auth": []
                    }
                ]
            }
        },
        "/custom-extra-hours": {
            "get": {
                "tags": [
                    "Custom Extra Hours"
                ],
                "operationId": "get_all",
                "responses": {
                    "200": {
                        "description": "Get all custom extra hours",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomExtraHoursTO"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Custom Extra Hours"
                ],
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomExtraHoursTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Create custom extra hours",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomExtraHoursTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/custom-extra-hours/by-sales-person/{sales_person_id}": {
            "get": {
                "tags": [
                    "Custom Extra Hours"
                ],
                "operationId": "get_by_sales_person_id",
                "parameters": [
                    {
                        "name": "sales_person_id",
                        "in": "path",
                        "description": "Sales person ID",
                        "required": true,
                        "example": "1a2b3c4d-5e6f-7g8h-9i0j-k1l2m3n4o5p6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get custom extra hours for sales person",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomExtraHoursTO"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    },
                    "404": {
                        "description": "Sales person not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/custom-extra-hours/custom-extra-hours/{id}": {
            "delete": {
                "tags": [
                    "Custom Extra Hours"
                ],
                "operationId": "delete",
                "responses": {
                    "204": {
                        "description": "Delete custom extra hours"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/custom-extra-hours/{id}": {
            "get": {
                "tags": [
                    "Custom Extra Hours"
                ],
                "operationId": "get_by_id",
                "responses": {
                    "200": {
                        "description": "Get custom extra hours by ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomExtraHoursTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Custom Extra Hours"
                ],
                "operationId": "update",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomExtraHoursTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Update custom extra hours",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomExtraHoursTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/extra-hours": {
            "post": {
                "tags": [
                    "Extra Hours"
                ],
                "operationId": "create_extra_hours",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExtraHoursTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Extra hours created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExtraHoursTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/extra-hours/by-sales-person/{id}": {
            "get": {
                "tags": [
                    "Extra Hours"
                ],
                "operationId": "get_extra_hours_for_sales_person",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sales person id",
                        "required": true,
                        "example": "1a2b3c4d-5e6f-7g8h-9i0j-k1l2m3n4o5p6"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        },
                        "example": "2025"
                    },
                    {
                        "name": "until_week",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        },
                        "example": "20"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Extra hours for sales person",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ExtraHoursTO"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sales person not found"
                    }
                }
            }
        },
        "/extra-hours/{id}": {
            "delete": {
                "tags": [
                    "Extra Hours"
                ],
                "operationId": "delete_extra_hours",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Extra hours id",
                        "required": true,
                        "example": "1a2b3c4d-5e6f-7g8h-9i0j-k1l2m3n4o5p6"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Extra hours deleted"
                    },
                    "404": {
                        "description": "Extra hours not found"
                    }
                }
            }
        },
        "/permission/privilege/": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "operationId": "get_all_privileges",
                "responses": {
                    "200": {
                        "description": "List all privileges",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PrivilegeTO"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/permission/role": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "operationId": "get_all_roles",
                "responses": {
                    "200": {
                        "description": "List all roles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RoleTO"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Permission"
                ],
                "operationId": "add_role",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Role created successfully"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Permission"
                ],
                "operationId": "delete_role",
                "requestBody": {
                    "content": {
                        "text/plain": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Role deleted successfully"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/permission/role-privilege/": {
            "post": {
                "tags": [
                    "Permission"
                ],
                "operationId": "add_role_privilege",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RolePrivilege"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Role privilege assigned successfully"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Permission"
                ],
                "operationId": "remove_role_privilege",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RolePrivilege"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Role privilege removed successfully"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/permission/user": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "operationId": "get_all_users",
                "responses": {
                    "200": {
                        "description": "List all users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserTO"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Permission"
                ],
                "operationId": "add_user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "User created successfully"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/permission/user-role": {
            "post": {
                "tags": [
                    "Permission"
                ],
                "operationId": "add_user_role",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRole"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "User role assigned successfully"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Permission"
                ],
                "operationId": "remove_user_role",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRole"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "User role removed successfully"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/permission/user/": {
            "delete": {
                "tags": [
                    "Permission"
                ],
                "operationId": "remove_user",
                "requestBody": {
                    "content": {
                        "text/plain": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/permission/user/{user}/roles": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "operationId": "get_roles_for_user",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User name",
                        "required": true,
                        "example": "john_doe"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List roles for user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RoleTO"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/report": {
            "get": {
                "tags": [
                    "Report"
                ],
                "operationId": "get_short_report_for_all",
                "parameters": [
                    {
                        "name": "year",
                        "in": "query",
                        "description": "The year for the report",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "until_week",
                        "in": "query",
                        "description": "The week to report until",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get short report for all employees",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShortEmployeeReportTO"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/report/week/{year}/{calendar_week}": {
            "get": {
                "tags": [
                    "Report"
                ],
                "operationId": "get_short_week_report",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The year for the report",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "calendar_week",
                        "in": "path",
                        "description": "The calendar week for the report",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get short week report",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShortEmployeeReportTO"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/report/{id}": {
            "get": {
                "tags": [
                    "Report"
                ],
                "operationId": "get_report",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sales person ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "The year for the report",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "until_week",
                        "in": "query",
                        "description": "The week to report until",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get report for an employee",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmployeeReportTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/sales-person": {
            "get": {
                "tags": [
                    "Sales persons"
                ],
                "operationId": "get_all_sales_persons",
                "responses": {
                    "200": {
                        "description": "Get all sales persons",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SalesPersonTO"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Sales persons"
                ],
                "description": "Create a new sales person",
                "operationId": "create_sales_person",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SalesPersonTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Create sales person",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SalesPersonTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/sales-person/by-user/{username}": {
            "get": {
                "tags": [
                    "Sales persons"
                ],
                "description": "Get sales person by username",
                "operationId": "get_sales_person_by_username",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "Username",
                        "required": true,
                        "example": "john.doe"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get sales person by username",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SalesPersonTO"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sales person not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/sales-person/current": {
            "get": {
                "tags": [
                    "Sales persons"
                ],
                "description": "Get the sales persons for the current user",
                "operationId": "get_sales_person_current_user",
                "responses": {
                    "200": {
                        "description": "Get current user sales person",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SalesPersonTO"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Sales person not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/sales-person/unavailable": {
            "post": {
                "tags": [
                    "Sales persons"
                ],
                "description": "Set a new sales person unavailable information",
                "operationId": "create_sales_person_unavailable",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sales person ID",
                        "required": true,
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SalesPersonUnavailableTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Create sales person unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SalesPersonUnavailableTO"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sales person not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/sales-person/unavailable/{id}": {
            "delete": {
                "tags": [
                    "Sales persons"
                ],
                "description": "Delete sales person unavailable information",
                "operationId": "delete_sales_person_unavailable",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sales person unavailable ID",
                        "required": true,
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete sales person unavailable"
                    },
                    "404": {
                        "description": "Sales person unavailable not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/sales-person/{id}": {
            "get": {
                "tags": [
                    "Sales persons"
                ],
                "description": "Get sales person by ID",
                "operationId": "get_sales_person",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sales person ID",
                        "required": true,
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get sales person by ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SalesPersonTO"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sales person not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Sales persons"
                ],
                "description": "Update a sales person",
                "operationId": "update_sales_person",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sales person ID",
                        "required": true,
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SalesPersonTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Update sales person",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SalesPersonTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Inconsistent ID"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Sales person not found"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Sales persons"
                ],
                "description": "Delete a sales person",
                "operationId": "delete_sales_person",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sales person ID",
                        "required": true,
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete sales person"
                    },
                    "404": {
                        "description": "Sales person not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/sales-person/{id}/ical": {
            "get": {
                "tags": [
                    "Sales persons"
                ],
                "description": "Get sales person shift iCal export",
                "operationId": "ical_for_sales_person",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sales person ID",
                        "required": true,
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get sales person iCal",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sales person not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/sales-person/{id}/unavailable": {
            "get": {
                "tags": [
                    "Sales persons"
                ],
                "description": "Get sales person unavailable information",
                "operationId": "get_sales_person_unavailable",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sales person ID",
                        "required": true,
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get sales person unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SalesPersonUnavailableTO"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/sales-person/{id}/user": {
            "get": {
                "tags": [
                    "Sales persons"
                ],
                "description": "Get sales person's username",
                "operationId": "get_sales_person_user",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sales person ID",
                        "required": true,
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get sales person user",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sales person not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Sales persons"
                ],
                "description": "Set the username for a sales person",
                "operationId": "set_sales_person_user",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sales person ID",
                        "required": true,
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Set sales person user"
                    },
                    "404": {
                        "description": "Sales person not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Sales persons"
                ],
                "description": "Delete the username for a sales person",
                "operationId": "delete_sales_person_user",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sales person ID",
                        "required": true,
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete sales person user"
                    },
                    "404": {
                        "description": "Sales person not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/special-days": {
            "post": {
                "tags": [
                    "Special Days"
                ],
                "operationId": "create_special_days",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SpecialDayTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Create a special day",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecialDayTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/special-days/for-week/{year}/{calendar_week}": {
            "get": {
                "tags": [
                    "Special Days"
                ],
                "operationId": "get_special_days_for_week",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The year",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "calendar_week",
                        "in": "path",
                        "description": "The calendar week",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get special days for a week",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SpecialDayTO"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/special-days/{id}": {
            "delete": {
                "tags": [
                    "Special Days"
                ],
                "operationId": "delete_special_day",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Special day ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Special day deleted successfully"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/text-templates": {
            "get": {
                "tags": [
                    "Text Templates"
                ],
                "operationId": "get_all_text_templates",
                "responses": {
                    "200": {
                        "description": "Get all text templates",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TextTemplateTO"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearer_auth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Text Templates"
                ],
                "description": "Create a new text template",
                "operationId": "create_text_template",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTextTemplateRequestTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Create text template",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TextTemplateTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - HR permission required"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearer_auth": []
                    }
                ]
            }
        },
        "/text-templates/by-type/{template_type}": {
            "get": {
                "tags": [
                    "Text Templates"
                ],
                "description": "Get text templates by template type",
                "operationId": "get_text_templates_by_type",
                "parameters": [
                    {
                        "name": "template_type",
                        "in": "path",
                        "description": "Template type",
                        "required": true,
                        "example": "email"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get text templates by type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TextTemplateTO"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearer_auth": []
                    }
                ]
            }
        },
        "/text-templates/{id}": {
            "get": {
                "tags": [
                    "Text Templates"
                ],
                "description": "Get text template by ID",
                "operationId": "get_text_template",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Text template ID",
                        "required": true,
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get text template by ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TextTemplateTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Text template not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearer_auth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Text Templates"
                ],
                "description": "Update a text template",
                "operationId": "update_text_template",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Text template ID",
                        "required": true,
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTextTemplateRequestTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Update text template",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TextTemplateTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Inconsistent ID"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - HR permission required"
                    },
                    "404": {
                        "description": "Text template not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearer_auth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Text Templates"
                ],
                "description": "Delete a text template",
                "operationId": "delete_text_template",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Text template ID",
                        "required": true,
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete text template"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - HR permission required"
                    },
                    "404": {
                        "description": "Text template not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearer_auth": []
                    }
                ]
            }
        },
        "/week-message": {
            "post": {
                "tags": [
                    "Week Messages"
                ],
                "operationId": "create_week_message",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WeekMessageTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Week message created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WeekMessageTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/week-message/by-year-and-week/{year}/{week}": {
            "get": {
                "tags": [
                    "Week Messages"
                ],
                "operationId": "get_week_message_by_year_and_week",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "Year",
                        "required": true,
                        "example": "2025"
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "Calendar week",
                        "required": true,
                        "example": "20"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Week message found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WeekMessageTO"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Week message not found"
                    }
                }
            }
        },
        "/week-message/by-year/{year}": {
            "get": {
                "tags": [
                    "Week Messages"
                ],
                "operationId": "get_week_messages_by_year",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "Year",
                        "required": true,
                        "example": "2025"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Week messages for year",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WeekMessageTO"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/week-message/{id}": {
            "get": {
                "tags": [
                    "Week Messages"
                ],
                "operationId": "get_week_message_by_id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Week message id",
                        "required": true,
                        "example": "1a2b3c4d-5e6f-7g8h-9i0j-k1l2m3n4o5p6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Week message found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WeekMessageTO"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Week message not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Week Messages"
                ],
                "operationId": "update_week_message",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Week message id",
                        "required": true,
                        "example": "1a2b3c4d-5e6f-7g8h-9i0j-k1l2m3n4o5p6"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WeekMessageTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Week message updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WeekMessageTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Week message not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Week Messages"
                ],
                "operationId": "delete_week_message",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Week message id",
                        "required": true,
                        "example": "1a2b3c4d-5e6f-7g8h-9i0j-k1l2m3n4o5p6"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Week message deleted"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Week message not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BillingPeriodSalesPersonTO": {
                "type": "object",
                "required": [
                    "id",
                    "sales_person_id",
                    "values",
                    "created_at",
                    "created_by"
                ],
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "deleted_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "deleted_by": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "sales_person_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "values": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/BillingPeriodValueTO"
                        },
                        "propertyNames": {
                            "type": "string"
                        }
                    }
                }
            },
            "BillingPeriodTO": {
                "type": "object",
                "required": [
                    "id",
                    "start_date",
                    "end_date",
                    "sales_persons",
                    "created_at",
                    "created_by"
                ],
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "deleted_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "deleted_by": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "sales_persons": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BillingPeriodSalesPersonTO"
                        }
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date"
                    }
                }
            },
            "BillingPeriodValueTO": {
                "type": "object",
                "required": [
                    "value_delta",
                    "value_ytd_from",
                    "value_ytd_to",
                    "value_full_year"
                ],
                "properties": {
                    "value_delta": {
                        "type": "number",
                        "format": "float"
                    },
                    "value_full_year": {
                        "type": "number",
                        "format": "float"
                    },
                    "value_ytd_from": {
                        "type": "number",
                        "format": "float"
                    },
                    "value_ytd_to": {
                        "type": "number",
                        "format": "float"
                    }
                }
            },
            "CreateBillingPeriodRequestTO": {
                "type": "object",
                "required": [
                    "end_date"
                ],
                "properties": {
                    "end_date": {
                        "type": "string",
                        "format": "date"
                    }
                }
            },
            "CreateTextTemplateRequestTO": {
                "type": "object",
                "required": [
                    "template_type",
                    "template_text"
                ],
                "properties": {
                    "name": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "template_text": {
                        "type": "string"
                    },
                    "template_type": {
                        "type": "string"
                    }
                }
            },
            "CustomExtraHoursTO": {
                "type": "object",
                "required": [
                    "name",
                    "modifies_balance",
                    "assigned_sales_person_ids"
                ],
                "properties": {
                    "$version": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "assigned_sales_person_ids": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "created": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "deleted": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "modifies_balance": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "DayOfWeekTO": {
                "type": "string",
                "enum": [
                    "Monday",
                    "Tuesday",
                    "Wednesday",
                    "Thursday",
                    "Friday",
                    "Saturday",
                    "Sunday"
                ]
            },
            "EmployeeReportTO": {
                "type": "object",
                "required": [
                    "sales_person",
                    "balance_hours",
                    "overall_hours",
                    "expected_hours",
                    "shiftplan_hours",
                    "extra_work_hours",
                    "vacation_hours",
                    "sick_leave_hours",
                    "holiday_hours",
                    "vacation_carryover",
                    "vacation_days",
                    "vacation_entitlement",
                    "sick_leave_days",
                    "holiday_days",
                    "absence_days",
                    "carryover_hours",
                    "custom_extra_hours",
                    "by_week",
                    "by_month"
                ],
                "properties": {
                    "absence_days": {
                        "type": "number",
                        "format": "float"
                    },
                    "balance_hours": {
                        "type": "number",
                        "format": "float"
                    },
                    "by_month": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkingHoursReportTO"
                        }
                    },
                    "by_week": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkingHoursReportTO"
                        }
                    },
                    "carryover_hours": {
                        "type": "number",
                        "format": "float"
                    },
                    "custom_extra_hours": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReportingCustomExtraHoursTO"
                        }
                    },
                    "expected_hours": {
                        "type": "number",
                        "format": "float"
                    },
                    "extra_work_hours": {
                        "type": "number",
                        "format": "float"
                    },
                    "holiday_days": {
                        "type": "number",
                        "format": "float"
                    },
                    "holiday_hours": {
                        "type": "number",
                        "format": "float"
                    },
                    "overall_hours": {
                        "type": "number",
                        "format": "float"
                    },
                    "sales_person": {
                        "$ref": "#/components/schemas/SalesPersonTO"
                    },
                    "shiftplan_hours": {
                        "type": "number",
                        "format": "float"
                    },
                    "sick_leave_days": {
                        "type": "number",
                        "format": "float"
                    },
                    "sick_leave_hours": {
                        "type": "number",
                        "format": "float"
                    },
                    "vacation_carryover": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "vacation_days": {
                        "type": "number",
                        "format": "float"
                    },
                    "vacation_entitlement": {
                        "type": "number",
                        "format": "float"
                    },
                    "vacation_hours": {
                        "type": "number",
                        "format": "float"
                    }
                }
            },
            "ExtraHoursCategoryTO": {
                "oneOf": [
                    {
                        "type": "string",
                        "enum": [
                            "ExtraWork"
                        ]
                    },
                    {
                        "type": "string",
                        "enum": [
                            "Vacation"
                        ]
                    },
                    {
                        "type": "string",
                        "enum": [
                            "SickLeave"
                        ]
                    },
                    {
                        "type": "string",
                        "enum": [
                            "Holiday"
                        ]
                    },
                    {
                        "type": "string",
                        "enum": [
                            "Unavailable"
                        ]
                    },
                    {
                        "type": "object",
                        "required": [
                            "Custom"
                        ],
                        "properties": {
                            "Custom": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ]
            },
            "ExtraHoursReportCategoryTO": {
                "oneOf": [
                    {
                        "type": "string",
                        "enum": [
                            "Shiftplan"
                        ]
                    },
                    {
                        "type": "string",
                        "enum": [
                            "ExtraWork"
                        ]
                    },
                    {
                        "type": "string",
                        "enum": [
                            "Vacation"
                        ]
                    },
                    {
                        "type": "string",
                        "enum": [
                            "SickLeave"
                        ]
                    },
                    {
                        "type": "string",
                        "enum": [
                            "Holiday"
                        ]
                    },
                    {
                        "type": "string",
                        "enum": [
                            "Unavailable"
                        ]
                    },
                    {
                        "type": "object",
                        "required": [
                            "Custom"
                        ],
                        "properties": {
                            "Custom": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ]
            },
            "ExtraHoursTO": {
                "type": "object",
                "required": [
                    "sales_person_id",
                    "amount",
                    "category",
                    "description",
                    "date_time"
                ],
                "properties": {
                    "$version": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "amount": {
                        "type": "number",
                        "format": "float"
                    },
                    "category": {
                        "$ref": "#/components/schemas/ExtraHoursCategoryTO"
                    },
                    "created": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "date_time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "sales_person_id": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "PrivilegeTO": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "ReportRequest": {
                "type": "object",
                "required": [
                    "year",
                    "until_week"
                ],
                "properties": {
                    "until_week": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    },
                    "year": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    }
                }
            },
            "ReportingCustomExtraHoursTO": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "hours"
                ],
                "properties": {
                    "hours": {
                        "type": "number",
                        "format": "float"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "RolePrivilege": {
                "type": "object",
                "required": [
                    "role",
                    "privilege"
                ],
                "properties": {
                    "privilege": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    }
                }
            },
            "RoleTO": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "SalesPersonTO": {
                "type": "object",
                "required": [
                    "name",
                    "background_color"
                ],
                "properties": {
                    "$version": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "background_color": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "inactive": {
                        "type": "boolean"
                    },
                    "is_paid": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "SalesPersonUnavailableTO": {
                "type": "object",
                "required": [
                    "sales_person_id",
                    "year",
                    "calendar_week",
                    "day_of_week"
                ],
                "properties": {
                    "$version": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "calendar_week": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    },
                    "created": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "day_of_week": {
                        "$ref": "#/components/schemas/DayOfWeekTO"
                    },
                    "deleted": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "sales_person_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "year": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    }
                }
            },
            "ShortEmployeeReportTO": {
                "type": "object",
                "required": [
                    "sales_person",
                    "balance_hours",
                    "expected_hours",
                    "overall_hours"
                ],
                "properties": {
                    "balance_hours": {
                        "type": "number",
                        "format": "float"
                    },
                    "expected_hours": {
                        "type": "number",
                        "format": "float"
                    },
                    "overall_hours": {
                        "type": "number",
                        "format": "float"
                    },
                    "sales_person": {
                        "$ref": "#/components/schemas/SalesPersonTO"
                    }
                }
            },
            "SpecialDayTO": {
                "type": "object",
                "required": [
                    "year",
                    "calendar_week",
                    "day_of_week",
                    "day_type"
                ],
                "properties": {
                    "$version": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "calendar_week": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    },
                    "created": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "day_of_week": {
                        "$ref": "#/components/schemas/DayOfWeekTO"
                    },
                    "day_type": {
                        "$ref": "#/components/schemas/SpecialDayTypeTO"
                    },
                    "deleted": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "time_of_day": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "time"
                    },
                    "year": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    }
                }
            },
            "SpecialDayTypeTO": {
                "type": "string",
                "enum": [
                    "Holiday",
                    "ShortDay"
                ]
            },
            "TextTemplateTO": {
                "type": "object",
                "required": [
                    "template_type",
                    "template_text"
                ],
                "properties": {
                    "$version": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "deleted": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "deleted_by": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "template_text": {
                        "type": "string"
                    },
                    "template_type": {
                        "type": "string"
                    }
                }
            },
            "UpdateTextTemplateRequestTO": {
                "type": "object",
                "required": [
                    "template_type",
                    "template_text"
                ],
                "properties": {
                    "name": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "template_text": {
                        "type": "string"
                    },
                    "template_type": {
                        "type": "string"
                    }
                }
            },
            "UserRole": {
                "type": "object",
                "required": [
                    "user",
                    "role"
                ],
                "properties": {
                    "role": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    }
                }
            },
            "UserTO": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "WeekMessageTO": {
                "type": "object",
                "required": [
                    "year",
                    "calendar_week",
                    "message"
                ],
                "properties": {
                    "$version": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "calendar_week": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    },
                    "created": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "deleted": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "message": {
                        "type": "string"
                    },
                    "year": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    }
                }
            },
            "WorkingHoursDayTO": {
                "type": "object",
                "required": [
                    "date",
                    "hours",
                    "category"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/ExtraHoursReportCategoryTO"
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "hours": {
                        "type": "number",
                        "format": "float"
                    }
                }
            },
            "WorkingHoursReportTO": {
                "type": "object",
                "required": [
                    "from",
                    "to",
                    "expected_hours",
                    "overall_hours",
                    "balance",
                    "days_per_week",
                    "workdays_per_week",
                    "shiftplan_hours",
                    "extra_work_hours",
                    "vacation_hours",
                    "vacation_days",
                    "sick_leave_hours",
                    "sick_leave_days",
                    "holiday_hours",
                    "holiday_days",
                    "absence_days",
                    "custom_extra_hours",
                    "days"
                ],
                "properties": {
                    "absence_days": {
                        "type": "number",
                        "format": "float"
                    },
                    "balance": {
                        "type": "number",
                        "format": "float"
                    },
                    "custom_extra_hours": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReportingCustomExtraHoursTO"
                        }
                    },
                    "days": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkingHoursDayTO"
                        }
                    },
                    "days_per_week": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    },
                    "expected_hours": {
                        "type": "number",
                        "format": "float"
                    },
                    "extra_work_hours": {
                        "type": "number",
                        "format": "float"
                    },
                    "from": {
                        "type": "string",
                        "format": "date"
                    },
                    "holiday_days": {
                        "type": "number",
                        "format": "float"
                    },
                    "holiday_hours": {
                        "type": "number",
                        "format": "float"
                    },
                    "overall_hours": {
                        "type": "number",
                        "format": "float"
                    },
                    "shiftplan_hours": {
                        "type": "number",
                        "format": "float"
                    },
                    "sick_leave_days": {
                        "type": "number",
                        "format": "float"
                    },
                    "sick_leave_hours": {
                        "type": "number",
                        "format": "float"
                    },
                    "to": {
                        "type": "string",
                        "format": "date"
                    },
                    "vacation_days": {
                        "type": "number",
                        "format": "float"
                    },
                    "vacation_hours": {
                        "type": "number",
                        "format": "float"
                    },
                    "workdays_per_week": {
                        "type": "number",
                        "format": "float"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "billing_period",
            "description": "Billing Period management"
        },
        {
            "name": "block_report",
            "description": "Block Report management"
        },
        {
            "name": "Custom Extra Hours",
            "description": "Custom Extra Hours API"
        },
        {
            "name": "Sales persons",
            "description": "Sales person API"
        },
        {
            "name": "Extra Hours",
            "description": "Extra hours management"
        },
        {
            "name": "Report",
            "description": "Report API"
        },
        {
            "name": "Permission",
            "description": "Permission Management API"
        },
        {
            "name": "Special Days",
            "description": "Special Days API"
        },
        {
            "name": "Text Templates",
            "description": "Text template management API"
        }
    ]
}